name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    paths:
      - 'run.py'  # Only trigger when run.py changes (contains Dockerfile)
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Dockerfile from run.py
        run: |
          python3 -c '
          import re
          with open("run.py", "r") as f:
              content = f.read()
              dockerfile_match = re.search(r"DOCKERFILE_CONTENT\s*=\s*\"\"\"(.*?)\"\"\"\s*", content, re.DOTALL)
              if dockerfile_match:
                  dockerfile = dockerfile_match.group(1).strip()
                  with open("Dockerfile", "w") as df:
                      df.write(dockerfile)
                  print("Successfully extracted Dockerfile")
              else:
                  print("Failed to extract Dockerfile content")
                  exit(1)
          '
          cat Dockerfile

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/dbg-container
          tags: |
            type=sha,format=short
            type=ref,event=branch
            latest

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}